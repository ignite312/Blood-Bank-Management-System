{"ast":null,"code":"import React,{useState,useEffect}from'react';import'../App.css';import'../styles.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function RequestForm(_ref){let{onFormSubmit}=_ref;const[requestData,setRequestData]=useState({patient_id:'',quantity:1,blood_group:'',hospital_name:''});const[loading,setLoading]=useState(false);const[patients,setPatients]=useState([]);useEffect(()=>{// Fetch and set the list of patients\nconst fetchPatients=async()=>{try{const response=await fetch('http://localhost:3000/api/get-patients');if(response.ok){const data=await response.json();setPatients(data.patients);}else{console.error('Failed to fetch patients');}}catch(error){console.error('Error fetching patients:',error);}};fetchPatients();},[]);const handleInputChange=e=>{const{name,value}=e.target;setRequestData(prevRequestData=>({...prevRequestData,[name]:value}));};const handleQuantityChange=amount=>{setRequestData(prevRequestData=>({...prevRequestData,quantity:Math.max(1,prevRequestData.quantity+amount)}));};const handleSubmit=async e=>{e.preventDefault();try{setLoading(true);const response=await fetch('http://localhost:3000/api/insert-request',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({...requestData,request_date:new Date().toISOString().split('T')[0]})});if(response.ok){console.log('Request data successfully inserted into the database');// Optionally, reset the form or provide feedback to the user\nsetRequestData({patient_id:'',quantity:1,blood_group:'',hospital_name:''});onFormSubmit(requestData);}else{console.error('Failed to insert request data into the database');// Optionally, provide user-friendly error message or feedback\n}}catch(error){console.error('Error:',error);// Optionally, provide user-friendly error message or feedback\n}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"center-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Request Blood\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"user-input-form\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"patient_id\",children:\"Patient ID:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"patient_id\",name:\"patient_id\",value:requestData.patient_id,onChange:handleInputChange})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"quantity\",children:\"Quantity:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"quantity-input\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>handleQuantityChange(-1),children:\"-\"}),/*#__PURE__*/_jsx(\"span\",{children:requestData.quantity}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>handleQuantityChange(1),children:\"+\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"blood_group\",children:\"Blood Group:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"blood_group\",name:\"blood_group\",value:requestData.blood_group,onChange:handleInputChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Blood Group\"}),/*#__PURE__*/_jsx(\"option\",{value:\"A+\",children:\"A+\"}),/*#__PURE__*/_jsx(\"option\",{value:\"A-\",children:\"A-\"}),/*#__PURE__*/_jsx(\"option\",{value:\"B+\",children:\"B+\"}),/*#__PURE__*/_jsx(\"option\",{value:\"B-\",children:\"B-\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AB+\",children:\"AB+\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AB-\",children:\"AB-\"}),/*#__PURE__*/_jsx(\"option\",{value:\"O+\",children:\"O+\"}),/*#__PURE__*/_jsx(\"option\",{value:\"O-\",children:\"O-\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"hospital_name\",children:\"Hospital Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"hospital_name\",name:\"hospital_name\",value:requestData.hospital_name,onChange:handleInputChange})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-button\",disabled:loading,children:loading?'Submitting...':'Submit'})})]})]});}export default RequestForm;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","RequestForm","_ref","onFormSubmit","requestData","setRequestData","patient_id","quantity","blood_group","hospital_name","loading","setLoading","patients","setPatients","fetchPatients","response","fetch","ok","data","json","console","error","handleInputChange","e","name","value","target","prevRequestData","handleQuantityChange","amount","Math","max","handleSubmit","preventDefault","method","headers","body","JSON","stringify","request_date","Date","toISOString","split","log","className","children","onSubmit","htmlFor","type","id","onChange","onClick","disabled"],"sources":["/Users/emon/Desktop/Blood-Bank-Management-System/src/UserAccess/Request.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport '../styles.css';\n\n\nfunction RequestForm({ onFormSubmit }) {\n  const [requestData, setRequestData] = useState({\n    patient_id: '',\n    quantity: 1,\n    blood_group: '',\n    hospital_name: '',\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [patients, setPatients] = useState([]);\n\n  useEffect(() => {\n    // Fetch and set the list of patients\n    const fetchPatients = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/api/get-patients');\n        if (response.ok) {\n          const data = await response.json();\n          setPatients(data.patients);\n        } else {\n          console.error('Failed to fetch patients');\n        }\n      } catch (error) {\n        console.error('Error fetching patients:', error);\n      }\n    };\n\n    fetchPatients();\n  }, []);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setRequestData((prevRequestData) => ({\n      ...prevRequestData,\n      [name]: value,\n    }));\n  };\n\n  const handleQuantityChange = (amount) => {\n    setRequestData((prevRequestData) => ({\n      ...prevRequestData,\n      quantity: Math.max(1, prevRequestData.quantity + amount),\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n\n      const response = await fetch('http://localhost:3000/api/insert-request', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...requestData,\n          request_date: new Date().toISOString().split('T')[0],\n        }),\n      });\n\n      if (response.ok) {\n        console.log('Request data successfully inserted into the database');\n        // Optionally, reset the form or provide feedback to the user\n        setRequestData({\n          patient_id: '',\n          quantity: 1,\n          blood_group: '',\n          hospital_name: '',\n        });\n        onFormSubmit(requestData);\n      } else {\n        console.error('Failed to insert request data into the database');\n        // Optionally, provide user-friendly error message or feedback\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      // Optionally, provide user-friendly error message or feedback\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"center-container\">\n      <h2>Request Blood</h2>\n      <form onSubmit={handleSubmit} className=\"user-input-form\">\n        <div>\n          <label htmlFor=\"patient_id\">Patient ID:</label>\n          <input\n            type=\"text\"\n            id=\"patient_id\"\n            name=\"patient_id\"\n            value={requestData.patient_id}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"quantity\">Quantity:</label>\n          <div className=\"quantity-input\">\n            <button type=\"button\" onClick={() => handleQuantityChange(-1)}>\n              -\n            </button>\n            <span>{requestData.quantity}</span>\n            <button type=\"button\" onClick={() => handleQuantityChange(1)}>\n              +\n            </button>\n          </div>\n        </div>\n        <div>\n          <label htmlFor=\"blood_group\">Blood Group:</label>\n          <select\n            id=\"blood_group\"\n            name=\"blood_group\"\n            value={requestData.blood_group}\n            onChange={handleInputChange}\n          >\n            <option value=\"\">Select Blood Group</option>\n            <option value=\"A+\">A+</option>\n            <option value=\"A-\">A-</option>\n            <option value=\"B+\">B+</option>\n            <option value=\"B-\">B-</option>\n            <option value=\"AB+\">AB+</option>\n            <option value=\"AB-\">AB-</option>\n            <option value=\"O+\">O+</option>\n            <option value=\"O-\">O-</option>\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"hospital_name\">Hospital Name:</label>\n          <input\n            type=\"text\"\n            id=\"hospital_name\"\n            name=\"hospital_name\"\n            value={requestData.hospital_name}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\" className=\"submit-button\" disabled={loading}>\n            {loading ? 'Submitting...' : 'Submit'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default RequestForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}